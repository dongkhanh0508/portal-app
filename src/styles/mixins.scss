@use './variables' as vars;

// Card shadow mixin
@mixin card-shadow($level: 1) {
  @if $level == 1 {
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
  } @else if $level == 2 {
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  } @else if $level == 3 {
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
  }
}

// Responsive breakpoint mixin
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: vars.$breakpoint-sm - 1px) {
      @content;
    }
  }
  @if $breakpoint == sm {
    @media (min-width: vars.$breakpoint-sm) and (max-width: vars.$breakpoint-md - 1px) {
      @content;
    }
  }
  @if $breakpoint == md {
    @media (min-width: vars.$breakpoint-md) and (max-width: vars.$breakpoint-lg - 1px) {
      @content;
    }
  }
  @if $breakpoint == lg {
    @media (min-width: vars.$breakpoint-lg) and (max-width: vars.$breakpoint-xl - 1px) {
      @content;
    }
  }
  @if $breakpoint == xl {
    @media (min-width: vars.$breakpoint-xl) {
      @content;
    }
  }
}

// Button variant mixin
@mixin button-variant($bg-color, $text-color: white) {
  background-color: $bg-color;
  color: $text-color;
  border: 1px solid $bg-color;

  &:hover {
    background-color: darken($bg-color, 10%);
    border-color: darken($bg-color, 10%);
  }

  &:active {
    background-color: darken($bg-color, 15%);
    border-color: darken($bg-color, 15%);
  }
}

// Truncate text mixin
@mixin truncate-text($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}
